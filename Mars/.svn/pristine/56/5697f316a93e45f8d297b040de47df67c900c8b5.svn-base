//
//  SwitchController.m
//  IOTCamViewer
//
//  Created by TUTK_MacMini2 on 13/11/5.
//  Copyright (c) 2013å¹´ TUTK. All rights reserved.
//

#import "SwitchController.h"
#import <IOTCamera/AVIOCTRLDEFs.h>

@implementation SwitchController

@synthesize camera;
@synthesize labelItems;
@synthesize origValue;
@synthesize newValue;
@synthesize delegate;

- (id)initWithStyle:(UITableViewStyle)style delegate:(id<SwitchDelegate>)delegate_ {
    
    self = [super initWithStyle:style];
    
    if (self) {
        
        self.delegate = delegate_;
    }
    
    return self;
}

- (IBAction)back:(id)sender {
    
    if (newValue != -1 && origValue != newValue) {
        
        SMsgAVIoctrlSetRecordingSetupReq *structSetRecSwitch = malloc(sizeof(SMsgAVIoctrlSetRecordingSetupReq));
        memset(structSetRecSwitch, 0, sizeof(SMsgAVIoctrlSetRecordingSetupReq));
        
        structSetRecSwitch->channel = 0;
        structSetRecSwitch->isCameraOn = (int)newValue;
        
        [camera sendIOCtrlToChannel:0
                               Type:IOTYPE_USER_IPCAM_SET_OVERWRITING_REQ
                               Data:(char *)structSetRecSwitch
                           DataSize:sizeof(SMsgAVIoctrlSetRecordingSetupReq)];
        
        free(structSetRecSwitch);
        
        if (self.delegate) [self.delegate didSetCamSwitch:newValue];
    }
    
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - View lifecycle

- (void)viewDidLoad {
    
    labelItems = [[NSArray alloc] initWithObjects:NSLocalizedString(@"Off", @""),
                  NSLocalizedString(@"On", @""), nil];
    
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]
                                             initWithTitle:NSLocalizedString(@"Back", @"") style:UIBarButtonItemStylePlain target:self action:@selector(back:)];
    self.navigationItem.title = NSLocalizedString(@"Record Switch", @"");
    
    self.newValue = -1;
    
    [super viewDidLoad];
}

- (void)viewDidUnload {
    
    self.delegate = nil;
    self.labelItems = nil;
    self.camera = nil;
    [super viewDidUnload];
}

- (void)viewWillAppear:(BOOL)animated {
    
    self.camera.delegate2 = self;
    [super viewWillAppear:animated];
}

- (void)dealloc {
    
    self.delegate = nil;
    [self.labelItems release];
    [self.camera release];
    [super dealloc];
}

#pragma mark - TableView DataSource Methods
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView
 numberOfRowsInSection:(NSInteger)section {
    return (section == 0) ? [self.labelItems count] : 0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView
         cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    NSUInteger row = [indexPath row];
    
    static NSString *RecSwitchTableIdentifier = @"RecSwitchTableIdentifier";
    UITableViewCell *cell = [self.tableView dequeueReusableCellWithIdentifier:RecSwitchTableIdentifier];
    
    if (cell == nil) {
        
        cell = [[[UITableViewCell alloc]
                 initWithStyle:UITableViewCellStyleDefault reuseIdentifier:RecSwitchTableIdentifier]
                autorelease];
    }
    
    cell.textLabel.text = [labelItems objectAtIndex:row];
    cell.accessoryType = (row == self.origValue) ? UITableViewCellAccessoryCheckmark : UITableViewCellAccessoryNone;
    
    
    return cell;
}

#pragma mark - TableView Delegate Methods
- (void)tableView:(UITableView *)tableView
didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    for (UITableViewCell *cell in [self.tableView visibleCells])
        cell.accessoryType = UITableViewCellAccessoryNone;
    
    UITableViewCell *cell = [self.tableView cellForRowAtIndexPath:indexPath];
    cell.accessoryType = UITableViewCellAccessoryCheckmark;
    
    self.newValue = [indexPath row];
    
    [self.tableView deselectRowAtIndexPath:indexPath animated:YES];
}

#pragma mark - MyCameraDelegate Methods
- (void)camera:(MyCamera *)camera_ _didReceiveIOCtrlWithType:(NSInteger)type Data:(const char *)data DataSize:(NSInteger)size {
    
    if (camera_ == camera && type == IOTYPE_USER_IPCAM_GET_RECORDINGSETUP_RESP) {
        
        SMsgAVIoctrlGetRecordingSetupReq *s = (SMsgAVIoctrlGetRecordingSetupReq*)data;
        memcpy(s, data, size);
        self.origValue = s->isCameraOn;
        
        [self.tableView reloadData];
    }
}
@end
